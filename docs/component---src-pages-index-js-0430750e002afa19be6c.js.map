{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Layout/listItems.js","webpack:///./src/components/Layout/index.js"],"names":["Index","location","pathname","maxWidth","Typography","to","LinkItem","activePath","title","icon","isActive","Link","ListItem","button","selected","ContainerComponent","ListItemIcon","color","ListItemText","primary","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","TITLE_BY_PATH","listLinks","Home","Assessment","DeveloperBoard","Brush","Code","BugReport","Backup","ThumbUp","PhoneInTalk","Dashboard","children","classes","React","useState","open","setOpen","pagePathname","replace","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","variant","noWrap","Drawer","Divider","List","map","linkProps","key","Container","Grid"],"mappings":"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","file":"component---src-pages-index-js-0430750e002afa19be6c.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Layout from '../components/Layout'\nimport Link from '../components/Link'\n\nexport default function Index({ location }) {\n  return (\n    <Layout pathname={location.pathname}>\n      <Container maxWidth=\"sm\">\n        <Typography>\n          Hello World!\n        </Typography>\n        <p>\n          Привет, это приложение прольет свет на работу в IT.\n        </p>\n        <p>\n          Открою маленький секрет, в IT работают не только программисты,\n          для проекта средних масштабов потребуется команда специалистов.\n        </p>\n        <p>\n          Предлагаю пройти путь создания интернет-магазина, заодно узнать об участниках\n        </p>\n        <div>\n          <Link to=\"/analysis\">Поехали</Link>\n        </div>\n      </Container>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '../Link'\n\n\nexport const LinkItem = ({activePath, pathname, title, icon, }) => {\n  const isActive = activePath === pathname;\n  return (\n    <Link to={pathname}>\n      <ListItem button selected={isActive} ContainerComponent={'li'}>\n          <ListItemIcon color={isActive ? 'primary' : 'default'}>\n              {icon}\n          </ListItemIcon>\n          <ListItemText primary={title} color={isActive ? 'primary' : 'default'}/>\n      </ListItem>\n      </Link>\n  );\n};","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport { LinkItem } from './listItems'\n\nimport {\n  Assessment,\n  Home,\n  DeveloperBoard,\n  BugReport,\n  Brush,\n  Code,\n  PhoneInTalk,\n  ThumbUp,\n  Backup\n} from '@material-ui/icons'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst TITLE_BY_PATH = {\n    '/': 'Цикл разработки в IT',\n    '/analysis': 'Сбор и анализ требований',\n    '/management': 'Распределяем задачи',\n    '/design': 'Играемся со шрифтами',\n    '/develop': 'Пишем код',\n    '/test': 'Ищем баги',\n    '/devops': 'Вынос приложения на бой',\n    '/marketing': 'Настраиваем рекламу',\n    '/support': 'Направляем пользователей на истиный путь'\n};\n\nconst listLinks = [\n  { pathname: '/', icon: <Home />, title: 'Главная' },\n  { pathname: '/analysis', icon: <Assessment />, title: 'Аналитика' },\n  { pathname: '/management', icon: <DeveloperBoard />, title: 'Менеджмент' },\n  { pathname: '/design', icon: <Brush />, title: 'Дизайн' },\n  { pathname: '/develop', icon: <Code />, title: 'Программирование' },\n  { pathname: '/test', icon: <BugReport />, title: 'Тестирование' },\n];\n\nconst addLink = [\n  { pathname: '/devops', icon: <Backup />, title: 'DevOps' },\n  { pathname: '/marketing', icon: <ThumbUp />, title: 'Маркетинг' },\n  { pathname: '/support', icon: <PhoneInTalk />, title: 'Сопровождение' },\n]\n\nexport default function Dashboard({children, pathname = ''}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const pagePathname = pathname.replace('/it-basis','');\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {TITLE_BY_PATH[pagePathname]}\n          </Typography>\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{listLinks.map(linkProps => <LinkItem key={linkProps.pathname} {...linkProps} activePath={pathname} />)}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {children}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}"],"sourceRoot":""}