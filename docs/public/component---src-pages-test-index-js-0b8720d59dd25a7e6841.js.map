{"version":3,"sources":["webpack:///./src/steps/test/steps.js","webpack:///./src/pages/test/index.js"],"names":["step1","step2","step3","Typography","variant","step4","step5","finalStep","steps","stepContent","Test","location","Layout","pathname","Container","maxWidth","Steps","nextPath"],"mappings":"oNAIaA,EAAQ,CACjB,6BACI,sQACA,+JACA,4BACI,8KACA,iQAEJ,8VACA,qYAGKC,EAAQ,CACjB,6BACI,sKACA,4BACI,qPACA,+JACA,+LACA,+JAICC,EAAQ,CACjB,6BACK,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,qBACA,wGAKIC,EAAQ,CAChB,6BACI,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,4CACA,8kBACA,iOACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,0CACD,0YAGKE,EAAQ,CACjB,6BACI,wUACA,4BACI,iJACA,4KAMCC,EAAY,CACrB,6BACI,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACA,mGACA,+GCpDFI,EAAQ,CAAC,cAAe,cAAc,cAAc,iBAAiB,0BACrEC,EAAc,CAClBT,EAAMC,EAAMC,EAAMI,EAAMD,GAGX,SAASK,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAC5B,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAUF,EAASE,UACzB,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACZ,EAAA,EAAD,qCAGA,kBAACa,EAAA,EAAD,CAAOR,MAAOA,EAAOC,YAAaA,EAAaQ,SAAU,SAAUV,UAAWA","file":"component---src-pages-test-index-js-0b8720d59dd25a7e6841.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link'\n\nexport const step1 = [\n    <div>\n        <p>Тестировщик (инженер по тестированию), он же QA-инженер (Quality Assurance) — это специалист, который проверяет качество программного обеспечения и уровень его соответствия заранее определенным потребностям и ожидаемым результатам.</p>\n        <p>Когда в России говорят «тестировщик», подразумевают одну из двух специализаций: Quality Assurance (QA) или Quality Control (QC).</p>\n        <ul>\n            <li>QC-специалист отвечает за то, чтобы результат работы программистов соответствовал цели: контролирует анализ кода и находит ошибки в работе ПО.</li>\n            <li>QA-специалист не только контролирует, но и обеспечивает качество работы продукта. Он отвечает и за работу ПО, и за сами процессы его разработки: выбирает инструменты, помогает предотвращать ошибки и совершенствовать продукт.</li>\n        </ul>\n        <p>Это очень общая и не совсем серьёзная классификация. На самом деле тестировщики бывают разные: специалисты автоматизированного тестирования, тестировщики СУБД, аналитики тестирования, разработчики-тестировщики, тестировщики-DevOPs и проч. Всё зависит от того, какие скиллы соединяет в себе каждый конкретный специалист.</p>\n        <p>В общем и целом работу инженера по тестированию можно свести к такому порядку: получил ПО → определил необходимый набор тестов → сопоставил реальное положение косяков, костылей, велосипедов и багов с ожидаемым результатом работы программы (аппаратно-программного комплекса) → завёл баги → работаешь с ними, пока они не закроются. Всё это, конечно, в цикле.</p>    \n    </div>\n]; \nexport const step2 = [\n    <div>\n        <p>Кроме стандартного пути внутри тестирования (от стажёра к лиду), есть несколько наиболее вероятных путей развития карьеры тестировщика.</p>\n        <ul>\n            <li>Разработка программного обеспечения — логичный и не самый сложный путь для тех, кто увлечётся языками программирования и захочет не только ковырять чужой код и готовый проект, но и создавать что-то внутри команды.</li>\n            <li>Руководитель проекта. Отличное знание проекта в целом, понимание потребностей и требований клиентов — прямой путь к этой точке.</li>\n            <li>Скрам мастер — интересный разворот, который у тестировщиков хорошо удаётся благодаря опять же знаниям проекта в целом и умениям жёстко планировать сроки работ.</li>\n            <li>Бизнес-аналитик, внедренец — денежные, но не столь технические должности для ребят с прокачанными коммуникативными навыками.</li>\n        </ul>\n    </div>\n];\nexport const step3 = [\n    <div>\n         <Typography variant=\"h4\">Игра. Поиск багов</Typography>\n         <p>\n            Предлагается картинка на которой нужно находить жуков и кликать по ним.\n         </p>\n    </div>\n];\nexport const step4 = [\n     <div>\n         <Typography variant=\"h4\">Тестировщики — «низшая каста» ИТ-отрасли</Typography>\n         <p>Вот сейчас обидно было. Или это как у ВДВ, но «не кодил — не айтишник»? Отдел тестирования — это по сути настоящий отдел контроля качества, который не позволит компании опозориться перед клиентом (если где-то упадёт навороченный костыль, хе-хе), вовремя определит явные ошибки UI/UX, проверит внутреннюю логику работы приложения или сервиса. Комплексная работа тестировщиков всех ИТ-компаний мира обеспечивает определённый уровень качества и сохраняет миллионы денег компаний, которые могли бы потеряться на жалобах конечных пользователей на бесконечные баги.</p>\n         <p>Тестировщики — это полноценные, сильные ИТ-специалисты, которые отличаются комплексным подходом к ПО и АПК, глубоким знанием продукта и умением видеть неочевидные взаимосвязи внутри разработок. </p>\n         <Typography variant=\"h4\">Тестирование — это просто поиск ошибок</Typography>\n        <p>Нет. Тестирование — это сложный сквозной процесс работы с продуктом, его аппаратным и программным окружением, а также с документацией. Найти баг — очень малое дело, а вот проанализировать, воспроизвести, собрать всю информацию, снять дампы, составить тест-план и автоматизировать рутинные задачи, пустить нагрузку и т.д. это уже сложная, многопрофильная работа.</p>\n     </div>\n];\nexport const step5 = [\n    <div>\n        <p>В принципе, тестировщик может быть интровертом или экстравертом, геймером или ролевиком, добрым или не очень. Коммуникативные навыки играют в команде определённую роль, но в целом хватит общей адекватности и умения выражать свои мысли. В тестировании нужны другие, более тонкие настройки личности.</p>\n        <ul>\n            <li>Аналитические навыки, чтобы понимать взаимосвязи, анализировать огромные массивы данных, результаты тестов и т.д.</li>\n            <li>Управление временем и скиллы планирования — только с ними можно обеспечить высокую производительность на фоне серьёзной рабочей нагрузки.</li>\n        </ul>\n    </div>\n];\n\n\nexport const finalStep = [\n    <div>\n        <Typography variant=\"h4\">Success!</Typography>\n        <p>Успех, вы закончили работу над интернет магазином, отдали заказчику.</p>\n        <p>\n            Мы рассмотрели базовые циклы разработки ПО и познакомились с профессиями в IT.\n        </p>\n    </div>\n];","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Layout from '../../components/Layout'\nimport Typography from '@material-ui/core/Typography';\nimport Steps from '../../components/Steps'\nimport {step1, step2,step3,step4,step5,finalStep} from '../../steps/test/steps'\n\nconst steps = ['Тестировщик', 'Перспектива','Поиск багов','Мифы профессии','Важные личные качества']\nconst stepContent = [\n  step1,step2,step3,step5,step4\n]\n\nexport default function Test({location}) {\n  return (\n    <Layout pathname={location.pathname}>\n      <Container maxWidth=\"sm\">\n        <Typography>\n        Инженер по тестированию. QUA\n        </Typography>\n        <Steps steps={steps} stepContent={stepContent} nextPath={'/final'} finalStep={finalStep}/>\n      </Container>\n    </Layout>\n  );\n}"],"sourceRoot":""}